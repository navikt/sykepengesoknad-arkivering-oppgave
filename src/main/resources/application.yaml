logging.config: classpath:logback-spring.xml

management:
  endpoint.prometheus.enabled: true
  endpoints.web:
    base-path: /internal
    exposure.include: prometheus
    path-mapping.prometheus: /prometheus

no.nav.security.jwt:
  issuer:
    aad:
      discoveryurl: ${AAD_WELL_KNOWN_URL}
      accepted_audience: ${AAD_SYFOGSAK_CLIENT_ID}
  client:
    registration:
      flex-bucket-uploader-client-credentials:
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${FLEX_BUCKET_UPLOADER_AAD_CLIENT_ID}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic


spring:
  main.banner-mode: 'off'
  jta.atomikos.datasource:
    max-pool-size: 32
    min-pool-size: 8
  kafka:
    client-id: ${nais.app.name}-${fasit.environment.name}
    properties:
      security.protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${srvsyfogsak.username}" password="${srvsyfogsak.password}";
      ssl.truststore:
        location: ${javax.net.ssl.trustStore}
        password: ${javax.net.ssl.trustStorePassword}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: ${nais.app.name}-${fasit.environment.name}
      max-poll-records: 1
      auto-offset-reset: none
      enable-auto-commit: false
  flyway:
    enabled: false # Prod databasen må oppgraderes før flyway kan kjøres igjen
