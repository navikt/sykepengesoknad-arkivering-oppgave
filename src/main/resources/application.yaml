logging.config: classpath:logback-spring.xml

management:
  endpoint.prometheus.enabled: true
  endpoints.web:
    base-path: /internal
    exposure.include: prometheus
    path-mapping.prometheus: /prometheus

server.port: 8080

spring:
  main.banner-mode: off
  jta.atomikos.datasource:
    max-pool-size: 32
    min-pool-size: 8
  kafka:
    client-id: ${app.name}-${fasit.environment.name}
    bootstrap-servers: b27apvl00045.preprod.local:8443,b27apvl00046.preprod.local:8443,b27apvl00047.preprod.local:8443
    properties:
        #    schema.registry.url: http://kafka-schema-registry.tpa:8081
        #    specific.avro.reader: true
        #    partitioner.class: no.nav.person.kafka.ModuloPartitioner
        security.protocol: SASL_SSL
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicRecordNameStrategy
        sasl:
          mechanism: PLAIN
          jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${srvsyfogsak.username}" password="${srvsyfogsak.password}";
        ssl.truststore:
          location: ${javax.net.ssl.trustStore}
          password: ${javax.net.ssl.trustStorePassword}
    consumer:
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        group-id: ${app.name}-${fasit.environment.name}
        max-poll-records: 1
        auto-offset-reset: earliest
        enable-auto-commit: false